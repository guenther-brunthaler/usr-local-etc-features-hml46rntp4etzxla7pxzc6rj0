#! /bin/sh

# $IP needs to be set on kernel command line or by some other means before
# this script.
#
# v2023.217

set -e 

# Needs to be mounted.
test ! -d /sys && exit

# These tools need to be installed.
for needed in iw rfkill ifconfig
do
	if command -v -- "$needed"
	then
		continue
	fi
	exit
done > /dev/null 2>& 1

# Config file is required. Same name as script, but in /etc/default.
configfile=/etc/default/${0##*/}
test -f "$configfile" && exit

# Preset defaults.
IFC=ibs0
FREQ=2412
TYPE=wlan
SSID=
NET=
. "$configfile"

# Ensure every required variable has been set to actual values.
for needed in IP IFC FREQ TYPE SSID NET
do
	eval v=\$$needed
	test -z "$v" && exit
done

case $1 in
	down | stop)
		iw dev ibs0 ibss leave
		ifconfig ibs0 down 0.0.0.0
		iw dev ibs0 del
		rfkill block wlan
		exit
		;;
esac

oldIFS=$IFS
IFS=:; set -- $IP; IFS=$oldIFS
IP=$1; NETMASK=$4; HOSTNAME=$5;

for rf in /sys/class/rfkill/*
do
	test ! -d "$rf" && exit
	test $TYPE != "`cat "$rf"/type`" && continue
	test 0 != "`cat "$rf/hard"`" && exit
done
PHY=
for rf in /sys/class/rfkill/*
do
	test $TYPE != "`cat "$rf"/type`" && continue
	n=`cat "$rf/name"`; test -n "$n"
	if test -z "$PHY" || test ${#n} -lt ${#PHY}
	then
		PHY=$n
	fi
	echo 0 > "$rf"/soft
done
test -z "$PHY" && exit

IFS=.; set -- $NET; ncs=$#; set -- $IP; IFS=$oldIFS
while expr $ncs + $# '>' 4 > /dev/null
do
	shift
done
IFS=.; IP=$NET.$*; IFS=$oldIFS

echo "Starting Wi-Fi in ad-hoc mode on $IFC"
PATH=/sbin:$PATH
iw phy $PHY interface add $IFC type ibss
ifconfig $IFC "$IP" netmask "$NETMASK" up
iw dev $IFC ibss join "$SSID" $FREQ
