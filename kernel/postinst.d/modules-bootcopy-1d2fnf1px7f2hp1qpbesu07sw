#! /bin/sh
# Version 2022.3
#
# Copyright (c) 2021-2022 Guenther Brunthaler. All rights reserved.
#
# This script is free software.
# Distribution is permitted under the terms of the GPLv3.

KERNEL_VERSION=${1:?kernel version}
bb=busybox-pbyqxzl1ktqlk3fjm3arlrclg # Optional.
bb_fallback=busybox # Optional.
pp=pipe_progress # Optional.

retry() {
	tries=5
	until "$@" 2> /dev/null
	do
		tries=`expr $tries - 1` || exit
		sleep 1
	done
}

set -e
cleanup() {
	rc=$?
	test "$OUTFILE" && rm -- "$OUTFILE"
	test "$RMTRO" && retry mount -o remount,ro /boot
	test "$TD" && rm -r -- "$TD"
	test $rc = 0 || echo "\"$0\" failed!" >& 2
}
RMTRO=
TD=
OUTFILE=
trap cleanup 0
trap 'exit $?' INT HUP TERM QUIT

have() {
	command -v "$1" > /dev/null 2>& 1 || return
}

not() {
	if "$@"
	then
		false || return
	fi
	:
}

if not have "$pp"
then
	have "$bb" || bb=$bb_fallback
	if have "$bb" && "$bb" --list 2> /dev/null | grep -q -- "$pp"
	then
		pp="$bb $pp"
	else
		pp=cat
	fi
fi
arc=xz
tarext=t$arc
have "$arc"
arc="$arc -c"

m=/proc/meminfo
test -e "$m"
m=`awk '$1 == "MemTotal:" && $3 == "kB" {print $2}' "$m"`
c=9
test $m -lt 1000000 && c=8
arc=$arc$c

if test ! -w /boot
then
	mount -o remount,rw /boot
	RMTRO=yes
fi
OUTFILE=/boot/modules-$KERNEL_VERSION.$tarext

a=Creating
test -e "$OUTFILE" && a=Refreshing
> "$OUTFILE" # Might save needed space.

TD=`mktemp -d -- "${TMPDIR:-/tmp}/${0##*/}".XXXXXXXXXX`
chmod 700 "$TD"
(
	cd -- "$TD"
	cp -pr /lib/modules/"$KERNEL_VERSION" .
	find -name "*.ko" -exec strip -g {} +
)
echo "$a $OUTFILE"
tar -C "$TD" -c "$KERNEL_VERSION" | $arc | $pp > "$OUTFILE"
OUTFILE=
