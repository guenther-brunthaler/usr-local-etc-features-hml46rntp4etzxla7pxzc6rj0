# Set as needed to indicate country in which device is operating.
# This can limit available channels and transmit power.
country_code=AT

# Enable IEEE 802.11d. This advertises the country_code and the set of allowed
# channels and transmit power levels based on the regulatory limits.
ieee80211d=1

# http://forum.snom.com/index.php?showtopic=6785
# Conversely, I discovered that all these characters can appear in an SSID
# and/or a WPA2-PSK password:
# abcdefghijklmnopqrstuvwxyz
# ABCDEFGHIJKLMNOPQRSTUVWXYZ
# 1234567890
# $@^`,|%;.~()/\{}:?[]=-+_#!

interface=wifilan
hw_mode=g
channel=acs_survey

#    0        1         2         3
#    12345678901234567890123456789012
ssid=xrpi2
# Accept all MAC address
macaddr_acl=0
# Shared Key Authentication
auth_algs=1
ignore_broadcast_ssid=0

# Bit 0: WPA. Bit 1: WPA2.
wpa=2

# WPA2 only: Either a 256 bit key specified as 64 hexadecimal digits. Or a
# pass phrase consisting of 8-63 printable ASCII characters (code points 0x20
# - 0x7e) from which to derive the actual key via PBKDF2 based on HMAC-SHA1
# with 4096 iterations and using the SSID as the salt.
#
# The following command will add a suitable random hex key:
# $ head -c32 /dev/urandom | perl -ne 'print "# ", unpack("H*", $_), "\n"' >> /etc/hostapd/hostapd.wpa2_psk
#
# WPA2 keys (not pass-phrases) can be read from a separate text file
# (containing lines of space-separated (MAC address, key) pairs.
wpa_psk_file=/etc/hostapd/hostapd.wpa2_psk
#wpa_passphrase=8_to_63_octets_of_utf8_text
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP

# bit 0 = Open System Authentication
# bit 1 = Shared Key Authentication (requires WEP)
auth_algs=1

# Change the broadcasted/multicasted keys after this many seconds.
wpa_group_rekey=600

# Change the master key after this many seconds. Master key is used as a basis
# (source) for the encryption keys.
wpa_gmk_rekey=86400

# IP Address Type Availability
# format: <1-octet encoded value as hex str>
# (ipv4_type & 0x3f) << 2 | (ipv6_type & 0x3)
# ipv4_type:
# 3 = Single NATed private IPv4 address available
# ipv6_type:
# 0 = Address type not available
ipaddr_type_availability=12

# Module bitfield (ORed bitfield of modules that will be logged; -1 = all
# modules):
# bit 0 (1) = IEEE 802.11
# bit 1 (2) = IEEE 802.1X
# bit 2 (4) = RADIUS
# bit 3 (8) = WPA
# bit 4 (16) = driver interface
# bit 5 (32) = IAPP
# bit 6 (64) = MLME
#
# Levels (minimum value for logged events):
#  0 = verbose debugging
#  1 = debugging
#  2 = informational messages
#  3 = notification
#  4 = warning
#
logger_syslog=-1
logger_syslog_level=0
#logger_stdout=-1
#logger_stdout_level=2
